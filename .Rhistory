n.repeats <- 2 # samples per group
n.groups <- 4 # number of groups
install.packages("magrittr")
library(magrittr)
groups <- rep(1:n.groups, each=n.repeats) %>% as.factor
groups
rep(1:n.groups, each=n.repeats)
?rep
rep(1:5, each=3)
n <- length(groups)
n
z0 <- rnorm(n.groups, 0, 10)
z0
(z <- z0[as.numeric(groups)]) # generate and inspect random group effects
z
z0[as.numeric(groups)]
z0[as.numeric(groups)]
as.numeric(groups)
z0[as.numeric(groups)]
as.numeric(groups)
z0
epsilon <- rnorm(n,0,1)
beta0 <- 2
y <- beta0 + z + epsilon
y
z <- c(1 2 3 4)
z <- c(1, 2, 3, 4)
(z <- z0[as.numeric(groups)])
a <- c(1, 2, 3, 4)
b <- c(0.5, 1, 0.1, 0.2)
a[b]
as.numeric(groups)
z0
c <- a[b]
c
b <- c(0.5, 1, 0.1, 0.2,0.1,2,0.01,0.5)
c <- a[b]
c
b <- c(0.5, 1, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,0.5)
c <- a[b]
c
b <- c(1, 1, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,0.5)
c <- a[b]
c
b <- c(1, 5, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,0.5)
c <- a[b]
c
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,0.5)
c <- a[b]
c
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,2)
c <- a[b]
c
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,2,0.02)
c <- a[b]
c
b <- c(10, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.01,2,0.02)
c <- a[b]
c
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0.)
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2,0.01,0.5,0.1,2,0)
c <- a[b]
c
b <- c(1, 3, 0.1, 0.2,0.1,2,0.01,0.5,0.1,2)
c <- a[b]
c
a <- c(1, 2, 3, 4,3,4,5,6,7,8,9)
c <- a[b]
c
a[?]
a[2]
a[23]
a[4]
a[5]
a[5,3]
a[(5,3)]
a[c(5,3)]
a[c(1,3)]
as.numeric(groups)
z0
#R Project - Supervised Learning
setwd('C:/Users/ofera/Studies/R/Project/src')
library(data.table)
data = fread('../Data/train_data.csv')
data = na.omit(data)
ntrain = 1000
ntest = 300
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
ntrain = 100000
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData = data[trainIdx, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
lm1 = step(lm(temp~.,data = trainData, na.action = na.exclude))
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
testError = MSE(predict(lm1, newdata = testData))
MSE = function(x){
mean(x^2)
}
testError = MSE(predict(lm1, newdata = testData))
print(testError)
lm1 = (lm(temp~.,data = trainData))
testError = MSE(predict(lm1, newdata = testData))
testError = MSE(predict(lm1, newdata = testData))
trainData$temp[1]
trainData$temp[100]
testError = MSE(predict(lm1, newdata = testData) - trainData$temp[testIdx])
print(testError)
predict(lm1, newdata = testData)
trainData$temp[testIdx]
trainData$temp
data = fread('../Data/train_data.csv')
data = na.omit(data)
ntrain = 100000
ntest = 300
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData = data[trainIdx, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
trainData$temp[testIdx]
data = na.omit(data)
View(data)
trainData$temp
data = fread('../Data/train_data.csv')
data = na.omit(data)
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
trainData$temp
ntrain = 100000
ntest = 300
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData = data[trainIdx, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
trainData = data[trainIdx, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
lm1 = (lm(temp~.,data = trainData))
firstPredict = predict(lm1, na.action = na.exclude)
trainError = MSE(firstPredict - trainData$temp)
print(trainError)
testError = MSE(predict(lm1, newdata = testData) - trainData$temp[testIdx])
print(testError)
trainData$temp
trainData$temp[testIdx]
testData
testData$temp
testIdx
trainData$temp[testIdx]
trainData$temp[280830 ]
data$temp[280830]
data$temp[19475]
is.na(data$temp)
colSums(is.na(data$temp))
Sums(is.na(data$temp))
Sum(is.na(data$temp))
sum(is.na(data$temp) == TRUE)
data = fread('../Data/train_data.csv')
data = na.omit(data)
ntrain = 100000
ntest = 300
nrow(data)
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData$temp[testIdx]
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
trainData$temp[testIdx]
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
#trainData = na.omit(trainData)
testData = data[testIdx, -"mdct"]
testIdx
#trainData = na.omit(trainData)
testData = data[testIdx,]
trainData$temp[testIdx]
testIdx
View(testData)
data = fread('../Data/train_data.csv')
data = na.omit(data)
ntrain = 100000
ntest = 300
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData = data[trainIdx, ]
trainData = trainData[, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
#trainData = na.omit(trainData)
testData = data[testIdx,]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
testData = testData[, -"mdct"]
lm1 = (lm(temp~.,data = trainData))
firstPredict = predict(lm1, na.action = na.exclude)
trainError = MSE(firstPredict - trainData$temp)
print(trainError)
testError = MSE(predict(lm1, newdata = testData) - trainData$temp)
print(testError)
testError = MSE(predict(lm1, newdata = testData) - testData$temp)
print(testError)
library(data.table)
data = na.omit(data)
ntrain = 100000
ntest = 300
#unwantedVal =  c('mdcr' 'date')
trainIdx = sample(1:nrow(data),ntrain,replace = FALSE)
testIdx = sample(1:nrow(data),ntest,replace = FALSE)
trainData = data[trainIdx, ]
trainData = trainData[, -"mdct"]
trainData = trainData[, -"date"]
trainData = trainData[, -"prcp"]
#trainData = na.omit(trainData)
testData = data[testIdx,]
testData = testData[, -"date"]
testData = testData[, -"prcp"]
testData = testData[, -"mdct"]
lm1 = (lm(temp~.,data = trainData))
firstPredict = predict(lm1, na.action = na.exclude)
trainError = MSE(firstPredict - trainData$temp)
print(trainError)
testError = MSE(predict(lm1, newdata = testData) - testData$temp)
print(testError)
library(data.table)
data = fread('../Data/train_data.csv')
tokeep <- which(sapply(data,is.numeric))
data = sapply(data[,..tokeep], na.aggregate)
library(zoo)
tokeep <- which(sapply(data,is.numeric))
data = sapply(data[,..tokeep], na.aggregate)
data = data.table(data)
library(data.table)
library(zoo)
data = fread('../Data/train_data.csv')
tokeep <- which(sapply(data,is.numeric))
data = sapply(data[,..tokeep], na.aggregate)
View(data)
View(data)
colToRemov = data[, colSums(is.na(data)) <= obs/4]
obs = nrow(data)
colToRemov = data[, colSums(is.na(data)) <= obs/4]
colToRemov
colToRemov = data[, colSums(is.na(data)) <= obs/4]
colToRemov = data[, which(colSums(is.na(data)) <= obs/4)]
colToRemov
data = fread('../Data/train_data.csv')
colToRemov = data[, colSums(is.na(data) <= obs/4)]
colToRemov
colSums(is.na(data) <= obs/4)
colSums(is.na(data) >= obs/4)
colToRemov = data[, colSums(is.na(data)) <= obs/4]
colToRemov
data = data[,-colToRemov == FALSE]
data = fread('../Data/train_data.csv')
data[ , colToRemov == FALSE] = NULL
data[ , ..colToRemov == FALSE] = NULL
data[ , colToRemov == FALSE]
colToRemov == FALSE
colToRemov == FALSE
library(dplyr)
find(colToRemov==flase)
find(colToRemov==FALSE)
Find(colToRemov==FALSE)
colToRemov==FALSE
data[,colToRemov == FALSE]
data[,colToRemov == FALSE]
which(colToRemov == FALSE)
data[,-which(colToRemov == FALSE)]
data[,which(colToRemov == FALSE)] = NULL
data = fread('../Data/train_data.csv')
data[,which(colToRemov == FALSE)] = NULL
obs = nrow(data)
View(data)
